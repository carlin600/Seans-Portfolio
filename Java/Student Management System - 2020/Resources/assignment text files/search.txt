package Assignment_Student_Management;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import javax.swing.*;

public class Search extends JFrame implements ActionListener {

	private JLabel lblHeader, lblHeading, lblSearch;
	private JComboBox cmbDisplay;
	private DefaultComboBoxModel[] options = new DefaultComboBoxModel[10];
	private JPanel centre;
	private JButton btnExit;
	private JTextArea taDisplay;
	private JTextField txtSearch;
	
	private TreeMap<Integer, _Course> courses;
	private TreeMap<Integer, _Module> modules;
	private TreeMap<Integer, _Tutor> tutors;
	private TreeMap<Integer, _Student> students;
	private TreeMap<Integer, _Academic> academics;
	private TreeMap<Integer, _Staff> staffs;

	public Search(TreeMap<Integer, _Course> coursesIn, TreeMap<Integer, _Module> modulesIn, TreeMap<Integer, _Tutor> tutorsIn,TreeMap<Integer, _Student> studentsIn, TreeMap<Integer, _Academic> academicsIn, TreeMap<Integer, _Staff> staffsIn)
	{
		
		courses = coursesIn;
		modules = modulesIn;
		tutors = tutorsIn;
		students = studentsIn;
		academics = academicsIn;
		staffs = staffsIn;
	
		
		lblHeader = new JLabel("Display Category", JLabel.CENTER);
		lblHeader.setFont(new Font("Calibri", Font.BOLD, 20));
		lblHeading = new JLabel("Select Category:", JLabel.RIGHT);
		lblHeading.setFont(new Font("Calibri", Font.BOLD, 18));
		lblSearch = new JLabel("Search:", JLabel.RIGHT);
		lblSearch.setFont(new Font("Calibri", Font.BOLD, 18));
		
		cmbDisplay = new JComboBox();
		cmbDisplay.addActionListener(this);
		
		taDisplay = new JTextArea(20,20);
		taDisplay.setEditable(false);
		
		txtSearch = new JTextField(15);
		
		btnExit = new JButton("Exit");
		btnExit.setFont(new Font("Calibri", Font.BOLD, 16));
		btnExit.addActionListener(this);
		
		
		Container main = getContentPane();
		main.setLayout(new GridBagLayout());
		main.setBackground(Color.CYAN);
		
		centre = new JPanel();
		centre.setLayout(new GridBagLayout());
		centre.setBackground(Color.CYAN);

		addComp(centre,			main		,1,1,1,1,1,1);
		addComp(lblHeader,		centre		,1,2,4,1,1,1);
		addComp(lblHeading,		centre		,1,3,1,1,1,1);
		addComp(cmbDisplay,		centre		,2,3,1,1,1,1);
		addComp(lblSearch,		centre		,3,3,1,1,1,1);
		addComp(txtSearch,		centre		,4,3,1,1,1,1);
		addComp(taDisplay,		centre		,1,4,4,4,4,4);
		addComp(btnExit,		centre		,1,8,4,1,1,1);
		

	}

	
	private void addComp(Component c, Container main, int gridX, int gridY, int width, int height, int weightX, int weightY)
	{
		GridBagConstraints gc = new GridBagConstraints(); //creates constraints object gc
		gc.fill = GridBagConstraints.BOTH;
		gc.insets = new Insets(8,8,8,8);
		gc.gridx = gridX;
		gc.gridy = gridY;
		gc.gridwidth = width;
		gc.gridheight = height;
		gc.weightx = weightX;
		gc.weighty = weightY;
		
		getContentPane().add(c, gc); //adds components to the gridbag
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if (e.getSource() == btnExit) {
			int option = JOptionPane.showConfirmDialog(null, "Are you sure you wish to Exit?", "Warning", JOptionPane.YES_NO_OPTION);
			
			if( option == JOptionPane.YES_OPTION)
			{
				this.setVisible(false);
			}
			
		}
	}

}
